# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Prepare environment
        run: ./scripts/ci-install.sh
        
      - name: Get packages
        run: |
           ./ci_build/python-env/bin/pip freeze > requirements.txt
           pip download -r requirements.txt -d packages  --python-version 27 --platform linux_armv7l --no-deps
        
      - name: Compile MCU firmware
        run: ./scripts/ci-build-stereotech.sh
        
      - name: Create dist
        run: |
          mkdir dist
          cp -R ./klippy/. ./dist/klippy
          cp -R ./stereotech_config/. ./dist/config
          cp -R ./ci_build/firmware/. ./dist/firmware
          cp -R ./packages/. ./dist/packages
          cp ./requirements.txt ./dist/requirements.txt
          tar -cvjf klipper.tar.bz2 -C dist .
             
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: klipper
          path: klipper.tar.bz2
          
  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [build]
    env:
      RELEASE_TYPE: testing
    
    steps:
      - name: Set release type
        run: echo "RELEASE_TYPE=stable" >> $GITHUB_ENV
        if: github.ref == 'refs/heads/master' 
    
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: klipper
      
      - name: Upload to AWS
        uses: ItsKarma/aws-cli@v1.70.0
        with:
          args: s3 cp klipper.tar.bz2 s3://${{ secrets.BUCKET_NAME }}/firmware_v5/${{ env.RELEASE_TYPE }}/ --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
